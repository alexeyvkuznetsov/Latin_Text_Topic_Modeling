install.packages(c("aplpack", "foreach", "iterators", "magick", "quanteda", "quantreg", "Rcpp", "reticulate", "sf", "stopwords", "testthat", "tidytext", "xml2"))
library(Rcmdr)
install.packages(c("haven", "Hmisc", "openxlsx", "plotly", "sp"))
install.packages(c("BH", "bit", "cli", "fansi", "farver", "fpc", "hms", "knitr", "leaps", "multcomp", "mvtnorm", "prabclus", "prettyunits", "psych", "qdap", "RcmdrMisc", "RCurl", "Rttf2pt1", "stringi", "tinytex", "wordspace", "xfun", "XML", "zoo"))
install.packages(c("biclust", "bit", "callr", "checkmate", "chron", "dendextend", "digest", "DT", "FactoMineR", "foreach", "fpc", "ggpubr", "ggraph", "hexbin", "Hmisc", "jsonlite", "knitr", "mapproj", "mime", "mnormt", "plotly", "processx", "ps", "RcppArmadillo", "RcppProgress", "rgl", "rstudioapi", "styler", "svglite", "xlsx"))
install.packages("xlsx")
install.packages(c("remotes", "xlsx"))
install.packages(c("ggm", "xlsx"))
install.packages("xlsx")
install.packages(c("covr", "dplyr", "fs", "ggplot2", "lifecycle", "modeltools", "survival", "textdata"))
install.packages(c("Cairo", "car", "crosstalk", "diffobj", "ggraph", "ggrepel", "glue", "graphlayouts", "Hmisc", "igraph", "iotools", "ISOcodes", "lgr", "matrixStats", "nloptr", "quanteda", "rapidjsonr", "Rcpp", "RcppParallel", "roxygen2", "shiny", "svs", "units", "vctrs", "xml2"))
install.packages("igraph")
install.packages(c("arm", "backports", "bigrquery", "broom", "Cairo", "circlize", "dbplyr", "devtools"))
install.packages(c("float", "gargle", "gender", "ggpubr", "git2r"))
install.packages(c("tidyr", "tidyselect", "tidytext", "tinytex", "topicmodels", "vctrs", "withr", "xfun", "xml2", "zoo"))
install.packages("topicmodels")
install.packages(c("modelr", "multcomp", "openxlsx", "pillar", "pkgbuild", "plotrix", "ps", "purrr"))
install.packages("installr")
library(installr)
updateR()
updateR()
library(installr)
install.packages("installr")
library(tm)
library(udpipe)
library(lsa)
library(ggplot2)
library(scatterplot3d)
library(corrplot)
library(factoextra)
install.packages("tm")
install.packages(c("udpipe", "lsa", "ggplot2", "scatterplot3d", "factoextra", "textmineR", "corrplot", "readr", "quanteda", "tidytext"))
install.packages(c("NLP", "syuzhet", "topicmodels", "ggplot", "dplyr"))
setwd("D:/GitHub/Latin_Text_Topic_Modeling/")
install.packages(c("digest", "dplyr", "ggplot2", "ggraph", "igraph", "reshape2", "textmineR", "tidytext", "topicmodels", "udpipe"))
setwd("D:/GitHub/Latin_Text_Topic_Modeling/")
library(textmineR)
library(igraph)
library(ggraph)
library(ggplot2)
library(tm)
library(udpipe)
prologus<-paste(scan(file ="files/01 prologus.txt",what='character'),collapse=" ")
historia_g<-paste(scan(file ="files/02 historia_g.txt",what='character'),collapse=" ")
recapitulatio<-paste(scan(file ="files/03 recapitulatio.txt",what='character'),collapse=" ")
historia_w<-paste(scan(file ="files/04 historia_w.txt",what='character'),collapse=" ")
historia_s<-paste(scan(file ="files/05 historia_s.txt",what='character'),collapse=" ")
prologus<-data.frame(texts=prologus)
historia_g<-data.frame(texts=historia_g)
recapitulatio<-data.frame(texts=recapitulatio)
historia_w<-data.frame(texts=historia_w)
historia_s<-data.frame(texts=historia_s)
prologus$book<-"01 Prologus"
historia_g$book<-"02 Historia Gothorum"
recapitulatio$book<-"03 Recapitulatio"
historia_w$book<-"04 Historia Wandalorum"
historia_s$book<-"05 Historia Suevorum"
historia<-rbind(prologus,historia_g,recapitulatio,historia_w,historia_s)
historia$texts <- tolower(historia$texts)
historia$texts <- removePunctuation(historia$texts)
historia$texts <- removeNumbers(historia$texts)
# UDPipe annotation
#udmodel_latin <- udpipe_download_model(language = "latin_ittb")
#udmodel_latin <- udpipe_load_model(ud_model$file_model)
udmodel_latin <- udpipe_load_model(file = "latin-ittb-ud-2.4-190531.udpipe")
x <- udpipe_annotate(udmodel_latin, x = historia$texts, doc_id = fivebooks$book, tagger = "default", parser = "default", trace = TRUE)
x <- as.data.frame(x)
x <- udpipe_annotate(udmodel_latin, x = historia$texts, doc_id = fivebooks$book, tagger = "default", parser = "default", trace = TRUE)
View(historia)
x <- udpipe_annotate(udmodel_latin, x = historia$texts, doc_id = historia$book, tagger = "default", parser = "default", trace = TRUE)
x <- as.data.frame(x)
dtf <- subset(x, upos %in% c("NOUN"))
dtf <- document_term_frequencies(dtf, document = "doc_id", term = "lemma")
head(dtf)
dtm <- document_term_matrix(x = dtf)
dtm <- dtm_remove_lowfreq(dtm, minfreq = 4)
head(dtm_colsums(dtm))
dtm <- dtm_remove_terms(dtm, terms = c("ann.", "ann", "an", "annus", "aer", "aes", "suus", "filius", "pater", "frater", "pars", "maldra", "theudericus", "hucusque", "hispanium", "caeter", "justinianus", "praelio", "cdxxxnum._rom.", "cdxinum._rom.", "cdxix", "op"))
k_list <- seq(1,15, by=1)
model_dir <- paste0("models_", digest::digest(colnames(dtm), algo = "sha1"))
if (!dir.exists(model_dir)) dir.create(model_dir)
model_list <- TmParallelApply(X = k_list, FUN = function(k){
m <- FitLdaModel(dtm = dtm,
k = k,
iterations = 4000,
burnin = 500,
alpha = 0.1,
optimize_alpha = FALSE,
calc_likelihood = FALSE,
calc_coherence = TRUE,
calc_r2 = FALSE,
cpus = 1)
m$k <- k
m
}, export= c("dtm"),
cpus = 2)
coherence_mat <- data.frame(k = sapply(model_list, function(x) nrow(x$phi)),
coherence = sapply(model_list, function(x) mean(x$coherence)),
stringsAsFactors = FALSE)
ggplot(coherence_mat, aes(x = k, y = coherence)) +
geom_point() +
geom_line(group = 1)+
ggtitle("Оптимальное количество тем (k)") + theme_minimal() +
scale_x_continuous(breaks = seq(1,15,1)) + ylab("Когерентность тем")
library(topicmodels)
topicModel <- topicmodels::LDA(dtm, k = 4, method = "Gibbs", control = list(nstart = 5, iter = 4000, burnin = 500, best = TRUE, seed = 1:5, alpha = 0.1))
topics(topicModel)
library(tidytext)
library(ggplot2)
library(dplyr)
td_beta <- tidy(topicModel)
td_beta %>%
group_by(topic) %>%
top_n(6, beta) %>%
ungroup() %>%
mutate(topic = paste0("Topic ", topic),
term = reorder_within(term, beta, topic)) %>%
ggplot(aes(term, beta, fill = as.factor(topic))) +
geom_col(alpha = 0.8, show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
coord_flip() +
scale_x_reordered() +
labs(x = NULL, y = expression(beta),
title = "Наиболее часто встречающиеся слова для каждой темы")
textIds <- c(1, 2, 3, 4, 5)
lapply(fivebooks$texts[textIds], as.character)
tmResult <- posterior(topicModel)
theta <- tmResult$topics
beta <- tmResult$terms
topicNames <- apply(terms(topicModel, 7), 2, paste, collapse = " ")
attr(topicModel, "alpha")
library("reshape2")
library("ggplot2")
N <- 5
topicProportionExamples <- theta[textIds,]
colnames(topicProportionExamples) <- topicNames
vizDataFrame <- melt(cbind(data.frame(topicProportionExamples), document = factor(1:N)), variable.name = "topic", id.vars = "document")
ggplot(data = vizDataFrame, aes(topic, value, fill = document), ylab = "proportion") +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
coord_flip() +
facet_wrap(~ document, ncol = N)
install.packages(c("textmineR", "tm", "udpipe"))
install.packages(c("textmineR", "tm", "udpipe"))
